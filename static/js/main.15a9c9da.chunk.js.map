{"version":3,"sources":["components/Header.js","components/Homepage.js","components/Addroom.js","components/Room-Propeties.js","components/Manu.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Homepage","props","roomList","listRoom","map","e","i","to","name","style","backgroundColor","color","onClick","indexX","Addroom","useState","roomType","setRoomType","setColor","setName","value","onChange","target","type","placeholder","add","RoomPropeties","flag","setFlag","product","setProduct","productList","setProductList","roomName","showProducts","key","onOffFunc","productLight","chooseProduct","length","alert","Manu","padding","position","top","left","width","height","background","border","fontSize","outline","App","list","setList","listNotConcatenated","setListNotConcatenated","addRoom","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.15a9c9da.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className='Header'>\r\n            <h1 >Smart House</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Homepage(props) {\r\n\r\n\r\n  const roomList = props.listRoom.map((e, i) => \r\n  <Link to={'/room/'+e.name} style={{ backgroundColor: e.color }} className='addroombutton'>{e.name}<br/></Link>)\r\n  \r\n  return (\r\n    <div>\r\n     <div>{roomList}</div>\r\n     <br/>\r\n        <Link to='/addroom'><button className='addroombutton' onClick={props.indexX} >+</button></Link>\r\n    </div >\r\n  )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BEDROOM_TYPE = 'Bedroom'\r\nconst BATHROOM_TYPE = 'Bathroom'\r\nconst KITCHEN_TYPE = 'Kitchen'\r\n\r\nexport default function Addroom(props) {\r\n\r\n    const [roomType, setRoomType] = useState(BEDROOM_TYPE)\r\n    const [color, setColor] = useState('');\r\n    const [name, setName] = useState('');\r\n    \r\n\r\n    return (\r\n      \r\n        <div className='addroom'>\r\n            <select value={roomType} onChange={(e) => { setRoomType(e.target.value) }} className='addroombutton'>\r\n                <option value={BEDROOM_TYPE}>{BEDROOM_TYPE}</option>\r\n                <option value={BATHROOM_TYPE}>{BATHROOM_TYPE}</option>\r\n                <option value={KITCHEN_TYPE}>{KITCHEN_TYPE}</option>\r\n            </select>\r\n            <br/>\r\n            <br/>\r\n            <input type='text' placeholder='Room name' onChange={(e)=>{setName(e.target.value)}} className='addroombutton'></input>\r\n            <br/>\r\n            <br/>\r\n            <input type='color' onChange={(e)=>{setColor(e.target.value)}} className='addroombutton' ></input>\r\n            <br/>\r\n            <br/>\r\n            <Link to='/'><button onClick={()=>props.add(name, color, roomType)} className='addroombutton'>Create Room</button></Link>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst AC = 'AC';\r\nconst LIGHT = 'Light';\r\nconst STERO_SYSTEM = 'Setro System';\r\nconst BOILER = 'Boiler';\r\nconst RED = 'red';\r\nconst GREEN = 'green';\r\n\r\nexport default function RoomPropeties(props) {\r\n    const [flag, setFlag] = useState(false);\r\n    const [product, setProduct] = useState(AC);\r\n    const [productList, setProductList] = useState([]);\r\n    // useEffect(()=> {\r\n    //     const storedProduct = localStorage.getItem('productA');\r\n    //     const storedProductList = localStorage.getItem('productList')\r\n    //     if (storedProduct){\r\n    //         setProduct(JSON.parse(storedProduct));\r\n    //     }\r\n    //     if (storedProductList){\r\n    //         setProductList(JSON.parse(storedProductList));\r\n    //     }\r\n\r\n    // }, [])\r\n\r\n    // useEffect(()=>{\r\n    //     localStorage.setItem('productA', JSON.stringify(product))\r\n    // }, [product])\r\n\r\n    // useEffect(()=>{\r\n    //     localStorage.setItem('productList', JSON.stringify(productList))\r\n    // }, [productList])\r\n\r\n    const roomName = props.listRoom.map((e) => e.name);\r\n    const roomType = props.listRoom.map((e) => e.type);\r\n   \r\n    \r\n\r\n    const addProduct = (name, color) => {\r\n        if(productList.length<5){\r\n            setProductList([...productList, { name, color }]);\r\n        } else {\r\n            alert('Error')\r\n        }\r\n    }\r\n    const showProducts = productList.map((e, i) => <div key={i}><button style={{ backgroundColor: e.color }} onClick={() => onOffFunc(i)}>{e.name}</button><br /></div>);\r\n\r\n    const onOffFunc = (i) => {\r\n        if (productList[i].color === RED) {\r\n            const productLight = [...productList];\r\n            productLight[i].color = GREEN;\r\n            setProductList(productLight);\r\n        } else {\r\n            const productLight = [...productList];\r\n            productLight[i].color = RED;\r\n            setProductList(productLight);\r\n        }\r\n\r\n    }\r\n    \r\n  const chooseProduct = () =>{\r\n    addProduct(product, RED)\r\n    setFlag(false)\r\n  }\r\n\r\n\r\n    const show = () => {\r\n        if (flag === true) {\r\n            return <div>\r\n                <div>Room name: {roomName}</div>\r\n                <br />\r\n                <div>Room type: {roomType} </div>\r\n                <br />\r\n                <select value={product} onChange={(e) => setProduct(e.target.value)} className='addroombutton'>\r\n                    <option value={AC}>{AC}</option>\r\n                    <option value={LIGHT}>{LIGHT}</option>\r\n                    <option value={STERO_SYSTEM}>{STERO_SYSTEM}</option>\r\n                    <option value={BOILER}>{BOILER}</option>\r\n                </select>\r\n                <br />\r\n                <button onClick={() => chooseProduct()}>Select Product</button>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <div>Room name: {roomName}</div>\r\n                <br />\r\n                <div>Room type: {roomType} </div>\r\n                <br />\r\n                {showProducts}\r\n                <button onClick={() => setFlag(true)}>Add New Product</button>\r\n            </div>\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {show()}\r\n            <br />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Manu() {\r\n    return (\r\n        <div className='house-icon'>\r\n            <Link to='/'><span style={{padding: '0', position: 'absolute', top: '65px', left: '1030px', width: '40px', height: '33px', background: 'none', color: '#008081', border: 'none', fontSize: '30px', outline: 'none'}}>🏠</span></Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Homepage from './components/Homepage';\nimport Addroom from './components/Addroom';\nimport RoomPropeties from './components/Room-Propeties';\nimport Menu from './components/Manu'\n\n\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [listNotConcatenated, setListNotConcatenated] = useState([]);\n\n \n  const addRoom = (name, color, type) => {\n    if (name.length > 5 || name.length === 0) {\n      alert('Error')\n    } else {\n      setList([...list, { name , color , type }])\n      setListNotConcatenated([{ name , color, type}])\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <Router>\n        <Menu/>\n        <Switch>\n          <Route exact path='/' component={() => <Homepage listRoom={list}/>}/>\n           <Route exact path='/addroom' component={() => <Addroom add={addRoom} />} />\n           <Route exact path='/room/:name' component={()=><RoomPropeties listRoom={listNotConcatenated}/>}/>\n      </Switch>\n    </Router>\n    </div>\n      );\n    }\n    \n    export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}